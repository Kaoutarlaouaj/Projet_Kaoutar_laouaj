@page "/user/register"
@inject Services.IUserService UserService
@inject IAlertService AlertService
@inject NavigationManager navManager

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Register</h4>
        <div class="card-body">
            <EditForm Model="@registerModel" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>First Name</label>
                    <InputText @bind-Value="registerModel.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.FirstName)" />
                </div>
                <div class="form-group">
                    <label>Last Name</label>
                    <InputText @bind-Value="registerModel.LastName" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.LastName)" />
                </div>
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="registerModel.Username" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.Password)" />
                </div>
                <button disabled="@loading" class="btn btn-success">Register</button>
            </EditForm>
            <div class="mt-3 text-center">
                <a href="/user/login">Do you have an account? Login</a>
            </div>
        </div>
    </div>
</div>

@code {
    private Blazorcrud.Client.Shared.Register registerModel = new();
    private bool loading;

    private async void OnValidSubmit()
    {
        AlertService.Clear();
        loading = true;
        try
        {
            await UserService.Register(registerModel);
            AlertService.Success("Registration successful!", true);
            navManager.NavigateTo("/user/login");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
        }
        loading = false;
        StateHasChanged();
    }
}
